{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhia\\\\Desktop\\\\TestDhiaBennour\\\\client\\\\src\\\\components\\\\galerie.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from '@material-ui/core/Modal';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { Input } from \"@material-ui/core\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getImages, addImage, deleteImage } from \"../action/image.action\";\nconst paper = {\n  position: 'absolute',\n  width: 400,\n  border: '2px solid #000'\n};\nexport class Galerie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      addModal: false\n    };\n\n    this.componentDidMount = () => {\n      const userId = this.props.match.params.userId;\n      console.log(userId);\n      this.props.getImages(userId);\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        addModal: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        addModal: false\n      });\n    };\n  }\n\n  render() {\n    const userId = this.props.match.params.userId;\n    const _this$props = this.props,\n          imageList = _this$props.imageList,\n          loading = _this$props.loading,\n          deleteImage = _this$props.deleteImage;\n    const _this$state = this.state,\n          search = _this$state.search,\n          addModal = _this$state.addModal;\n    const handleClose = this.handleClose,\n          handleOpen = this.handleOpen;\n    console.log(\"imageList\", imageList);\n\n    if (loading) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"spinner\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"galeries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"galeries-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"search\",\n      onChange: e => this.setState({\n        search: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Add photo\"), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: addModal,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"simple-modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Text in a modal\"), React.createElement(\"p\", {\n      id: \"simple-modal-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\")))), imageList && imageList.filter(image => image.name.startsWith(search)).map(image => {\n      return React.createElement(Card, {\n        style: {\n          maxWidth: 345\n        },\n        className: \"galeries-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        style: {\n          height: 140\n        },\n        image: image.link,\n        title: \"Contemplative Reptile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(CardActions, {\n        className: \"galerie-action-zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, image.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => deleteImage(userId, image._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"delete\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"zoom\"))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  imageList: state.imageList,\n  loading: state.loading\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, {\n  getImages,\n  deleteImage\n})(Galerie);","map":{"version":3,"sources":["C:/Users/Dhia/Desktop/TestDhiaBennour/client/src/components/galerie.js"],"names":["React","Component","connect","Modal","Card","CardActionArea","CardActions","Input","CardMedia","Button","Typography","getImages","addImage","deleteImage","paper","position","width","border","Galerie","state","search","addModal","componentDidMount","userId","props","match","params","console","log","handleOpen","setState","handleClose","render","imageList","loading","e","target","value","filter","image","name","startsWith","map","maxWidth","height","link","_id","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { getImages, addImage, deleteImage } from \"../action/image.action\";\r\n\r\nconst paper = { \r\n    position: 'absolute',\r\n    width: 400,\r\n  \r\n    border: '2px solid #000',  \r\n  }\r\nexport class Galerie extends Component {\r\n  state = {\r\n    search: \"\",\r\n    addModal : false\r\n  };\r\n  componentDidMount = () => {\r\n    const { userId } = this.props.match.params;\r\n    console.log(userId);\r\n    this.props.getImages(userId);\r\n  };\r\n   handleOpen = () => {\r\n     this.setState({addModal : true})\r\n  };\r\n\r\n   handleClose = () => {\r\n    this.setState({addModal : false})    \r\n  };\r\n  render() {\r\n    const { userId } = this.props.match.params;\r\n    const { imageList, loading, deleteImage } = this.props;\r\n    const { search ,addModal} = this.state;\r\n    const {handleClose,handleOpen} = this\r\n    console.log(\"imageList\", imageList);\r\n    if (loading) {\r\n      return <span>spinner</span>;\r\n    }\r\n    return (\r\n      <div className=\"galeries\">\r\n        <div className=\"galeries-header\">\r\n          <Input\r\n            placeholder=\"search\"\r\n            onChange={(e) => this.setState({ search: e.target.value })}\r\n          />\r\n           <Button type=\"button\" onClick={handleOpen}>\r\n        Add photo\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={addModal}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={paper}  >\r\n          <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n          <p id=\"simple-modal-description\">\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n        </div>\r\n        {imageList &&\r\n          imageList\r\n            .filter((image) => image.name.startsWith(search))\r\n            .map((image) => {\r\n              return (\r\n                <Card style={{ maxWidth: 345 }} className=\"galeries-card\">\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      style={{ height: 140 }}\r\n                      image={image.link}\r\n                      title=\"Contemplative Reptile\"\r\n                    />\r\n                  </CardActionArea>\r\n                  <CardActions className=\"galerie-action-zone\">\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\">\r\n                      {image.name}\r\n                    </Typography>\r\n                    <div>\r\n                      <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => deleteImage(userId, image._id)}>\r\n                        delete\r\n                      </Button>\r\n                      <Button size=\"small\" color=\"primary\">\r\n                        zoom\r\n                      </Button>\r\n                    </div>\r\n                  </CardActions>\r\n                </Card>\r\n              );\r\n            })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  imageList: state.imageList,\r\n  loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getImages, deleteImage }\r\n)(Galerie);\r\n"]},"metadata":{},"sourceType":"module"}