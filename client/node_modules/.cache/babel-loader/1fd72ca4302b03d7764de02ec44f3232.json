{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhia\\\\Desktop\\\\TestDhiaBennour\\\\client\\\\src\\\\components\\\\galerie.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getImages, addImage, deleteImage } from \"../action/image.action\";\nexport class Galerie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      const userId = this.props.match.params.userId;\n      console.log(userId);\n      this.props.getImages(userId);\n    };\n  }\n\n  render() {\n    const userId = this.props.match.params.userId;\n    const _this$props = this.props,\n          imageList = _this$props.imageList,\n          loading = _this$props.loading;\n    console.log(\"imageList\", imageList);\n\n    if (loading) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"spinner\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"galeries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, imageList && imageList.map(image => {\n      return React.createElement(Card, {\n        style: {\n          maxWidth: 345\n        },\n        className: \"galeries-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        style: {\n          height: 140\n        },\n        image: image.link,\n        title: \"Contemplative Reptile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(CardActions, {\n        className: \"galerie-action-zone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, image.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => deleteImage(userId, image._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"delete\"), React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"zoom\"))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  imageList: state.imageList,\n  loading: state.loading\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, {\n  getImages,\n  deleteImage\n})(Galerie);","map":{"version":3,"sources":["C:/Users/Dhia/Desktop/TestDhiaBennour/client/src/components/galerie.js"],"names":["React","Component","connect","Card","CardActionArea","CardActions","CardMedia","Button","Typography","getImages","addImage","deleteImage","Galerie","componentDidMount","userId","props","match","params","console","log","render","imageList","loading","map","image","maxWidth","height","link","name","_id","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { getImages, addImage, deleteImage } from \"../action/image.action\";\r\nexport class Galerie extends Component {\r\n  componentDidMount = () => {\r\n    const { userId } = this.props.match.params;\r\n    console.log(userId);\r\n    this.props.getImages(userId);\r\n  };\r\n  render() {\r\n    const { userId } = this.props.match.params;\r\n    const { imageList, loading } = this.props;\r\n    console.log(\"imageList\", imageList);\r\n    if (loading) {\r\n      return <span>spinner</span>;\r\n    }\r\n    return (\r\n      <div className = 'galeries'>\r\n        {imageList && imageList.map((image) => {\r\n          return (\r\n            <Card style={{ maxWidth: 345 }} className = 'galeries-card'>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  style={{ height: 140 }}\r\n                  image= {image.link}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              <CardActions className ='galerie-action-zone'>\r\n                \r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {image.name}\r\n                </Typography>\r\n                <div>\r\n                <Button size=\"small\" color=\"primary\" onClick = {() => deleteImage(  userId ,image._id)}>\r\n                 delete\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  zoom\r\n                </Button>\r\n                </div>\r\n              </CardActions>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  imageList: state.imageList,\r\n  loading: state.loading\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getImages,deleteImage }\r\n)(Galerie);\r\n"]},"metadata":{},"sourceType":"module"}