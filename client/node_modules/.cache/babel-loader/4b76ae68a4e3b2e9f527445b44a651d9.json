{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhia\\\\Desktop\\\\TestDhiaBennour\\\\client\\\\src\\\\components\\\\userTable.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport { getUser } from '../action/user.action';\nexport class UserTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Surname',\n        field: 'surName'\n      }, {\n        title: 'Birth Year',\n        field: 'birthDay',\n        type: 'numeric'\n      }, {\n        title: 'Birth Place',\n        field: 'birthPlace'\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.props.getUser();\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          userList = _this$props.userList,\n          isLoading = _this$props.isLoading;\n    console.log(\"userList\", userList);\n    return React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      className: \"table-content\",\n      title: \"Editable Example\",\n      data: userList,\n      columns: this.state.columns,\n      isLoading: isLoading,\n      editable: {\n        onRowAdd: newData => console.log(newData) // onRowUpdate: (newData, oldData) =>\n        //   new Promise(resolve => {\n        //     setTimeout(() => {\n        //       resolve();\n        //       const data = [...state.data];\n        //       data[data.indexOf(oldData)] = newData;\n        //       setState({ ...state, data });\n        //     }, 600);\n        //   }),\n        // onRowDelete: oldData =>\n        //   new Promise(resolve => {\n        //     setTimeout(() => {\n        //       resolve();\n        //       const data = [...state.data];\n        //       data.splice(data.indexOf(oldData), 1);\n        //       setState({ ...state, data });\n        //     }, 600);\n        //   }),\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userList: state.userList,\n  isLoading: state.loading\n});\n\nexport default connect(mapStateToProps, {\n  getUser\n})(UserTable);","map":{"version":3,"sources":["C:/Users/Dhia/Desktop/TestDhiaBennour/client/src/components/userTable.js"],"names":["React","Component","connect","MaterialTable","getUser","UserTable","state","columns","title","field","type","componentDidMount","props","render","userList","isLoading","console","log","onRowAdd","newData","mapStateToProps","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAO,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACrCK,KADqC,GAC7B;AACJC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADK,EAEL;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAFK,EAGL;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE,UAA9B;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAHK,EAIL;AACEF,QAAAA,KAAK,EAAE,aADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAJK;AADL,KAD6B;;AAAA,SAarCE,iBAbqC,GAalB,MAAM;AACrB,WAAKC,KAAL,CAAWR,OAAX;AACH,KAfoC;AAAA;;AAkBrCS,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKD,KAD7B;AAAA,UACEE,QADF,eACEA,QADF;AAAA,UACWC,SADX,eACWA,SADX;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACA,WACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACA,MAAA,SAAS,EAAC,eADV;AAEC,MAAA,KAAK,EAAC,kBAFP;AAGC,MAAA,IAAI,EAAEA,QAHP;AAIC,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,OAJrB;AAKC,MAAA,SAAS,EAAIQ,SALd;AAOC,MAAA,QAAQ,EAAE;AACPG,QAAAA,QAAQ,EAAEC,OAAO,IAAGH,OAAO,CAACC,GAAR,CAAYE,OAAZ,CADb,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBO,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAoCH;;AAzDoC;;AA4DzC,MAAMC,eAAe,GAAId,KAAD,KAAY;AAChCQ,EAAAA,QAAQ,EAAGR,KAAK,CAACQ,QADe;AAEhCC,EAAAA,SAAS,EAAET,KAAK,CAACe;AAFe,CAAZ,CAAxB;;AAKA,eAAenB,OAAO,CAACkB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,SAApC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MaterialTable from 'material-table';\r\nimport {getUser} from '../action/user.action'\r\nexport class UserTable extends Component {\r\n    state = {\r\n        columns: [\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Surname', field: 'surName' },\r\n            { title: 'Birth Year', field: 'birthDay', type: 'numeric' },\r\n            {\r\n              title: 'Birth Place',\r\n              field: 'birthPlace',\r\n            },\r\n          ],\r\n          \r\n    }\r\n    componentDidMount =() => {\r\n        this.props.getUser()\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {userList,isLoading} = this.props\r\n        console.log(\"userList\" ,userList)\r\n        return (\r\n            <div className ='table-container'>\r\n                <MaterialTable \r\n                className='table-content'\r\n                 title=\"Editable Example\"\r\n                 data={userList}\r\n                 columns={this.state.columns}\r\n                 isLoading = {isLoading}\r\n\r\n                 editable={{\r\n                    onRowAdd: newData =>console.log(newData)\r\n                       \r\n                    // onRowUpdate: (newData, oldData) =>\r\n                    //   new Promise(resolve => {\r\n                    //     setTimeout(() => {\r\n                    //       resolve();\r\n                    //       const data = [...state.data];\r\n                    //       data[data.indexOf(oldData)] = newData;\r\n                    //       setState({ ...state, data });\r\n                    //     }, 600);\r\n                    //   }),\r\n                    // onRowDelete: oldData =>\r\n                    //   new Promise(resolve => {\r\n                    //     setTimeout(() => {\r\n                    //       resolve();\r\n                    //       const data = [...state.data];\r\n                    //       data.splice(data.indexOf(oldData), 1);\r\n                    //       setState({ ...state, data });\r\n                    //     }, 600);\r\n                    //   }),\r\n                  }}\r\n\r\n\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userList : state.userList,\r\n    isLoading: state.loading\r\n})\r\n \r\nexport default connect(mapStateToProps, {getUser})(UserTable)\r\n"]},"metadata":{},"sourceType":"module"}